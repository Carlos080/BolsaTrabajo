package mx.edu.itszapopan.bolsatrabajo.VO;
// Generated 14/09/2017 08:24:27 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Student generated by hbm2java
 */
@Entity
@Table(name="Student"
    ,catalog="bolsa_trabajo"
    , uniqueConstraints = @UniqueConstraint(columnNames="idAccount") 
)
public class Student  implements java.io.Serializable {


     private Integer idStudent;
     private Account account;
     private Career career;
     private EnglishLevel englishLevel;
     private Institute institute;
     private String name;
     private String surName;
     private String maidenName;
     private String genre;
     private Set<Calendar> calendars = new HashSet<Calendar>(0);
     private Set<Curriculum> curriculums = new HashSet<Curriculum>(0);
     private Set<Specialty> specialties = new HashSet<Specialty>(0);
     private Set<Job> jobs = new HashSet<Job>(0);
     private Set<DocumentData> documentDatas = new HashSet<DocumentData>(0);

    public Student() {
    }

	
    public Student(Account account, Career career, EnglishLevel englishLevel, Institute institute, String name, String surName, String maidenName) {
        this.account = account;
        this.career = career;
        this.englishLevel = englishLevel;
        this.institute = institute;
        this.name = name;
        this.surName = surName;
        this.maidenName = maidenName;
    }
    public Student(Account account, Career career, EnglishLevel englishLevel, Institute institute, String name, String surName, String maidenName, String genre, Set<Calendar> calendars, Set<Curriculum> curriculums, Set<Specialty> specialties, Set<Job> jobs, Set<DocumentData> documentDatas) {
       this.account = account;
       this.career = career;
       this.englishLevel = englishLevel;
       this.institute = institute;
       this.name = name;
       this.surName = surName;
       this.maidenName = maidenName;
       this.genre = genre;
       this.calendars = calendars;
       this.curriculums = curriculums;
       this.specialties = specialties;
       this.jobs = jobs;
       this.documentDatas = documentDatas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idStudent", unique=true, nullable=false)
    public Integer getIdStudent() {
        return this.idStudent;
    }
    
    public void setIdStudent(Integer idStudent) {
        this.idStudent = idStudent;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idAccount", unique=true, nullable=false)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCareer", nullable=false)
    public Career getCareer() {
        return this.career;
    }
    
    public void setCareer(Career career) {
        this.career = career;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEnglishLevel", nullable=false)
    public EnglishLevel getEnglishLevel() {
        return this.englishLevel;
    }
    
    public void setEnglishLevel(EnglishLevel englishLevel) {
        this.englishLevel = englishLevel;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idInstitute", nullable=false)
    public Institute getInstitute() {
        return this.institute;
    }
    
    public void setInstitute(Institute institute) {
        this.institute = institute;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="surName", nullable=false, length=45)
    public String getSurName() {
        return this.surName;
    }
    
    public void setSurName(String surName) {
        this.surName = surName;
    }

    
    @Column(name="maidenName", nullable=false, length=45)
    public String getMaidenName() {
        return this.maidenName;
    }
    
    public void setMaidenName(String maidenName) {
        this.maidenName = maidenName;
    }

    
    @Column(name="genre", length=2)
    public String getGenre() {
        return this.genre;
    }
    
    public void setGenre(String genre) {
        this.genre = genre;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="student")
    public Set<Calendar> getCalendars() {
        return this.calendars;
    }
    
    public void setCalendars(Set<Calendar> calendars) {
        this.calendars = calendars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="student")
    public Set<Curriculum> getCurriculums() {
        return this.curriculums;
    }
    
    public void setCurriculums(Set<Curriculum> curriculums) {
        this.curriculums = curriculums;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="student")
    public Set<Specialty> getSpecialties() {
        return this.specialties;
    }
    
    public void setSpecialties(Set<Specialty> specialties) {
        this.specialties = specialties;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="student")
    public Set<Job> getJobs() {
        return this.jobs;
    }
    
    public void setJobs(Set<Job> jobs) {
        this.jobs = jobs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="student")
    public Set<DocumentData> getDocumentDatas() {
        return this.documentDatas;
    }
    
    public void setDocumentDatas(Set<DocumentData> documentDatas) {
        this.documentDatas = documentDatas;
    }




}


